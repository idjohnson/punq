name: develop

on:
  push:
    branches:
      - develop

env:
  IMAGE_NAME: ghcr.io/mogenius/punq-dev
  DOCKERFILE: Dockerfile-Operator

jobs:
  prepare:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PUNQ_TOKEN }}

      - name: Create Sematic Release Version
        run: |
          # npm install -g standard-version
          export HOME=/root
          git config --system http.sslVerify false
          git config --global user.email "punqs@mogenius.com"
          git config --global user.name "punq"
          git config --global credential.helper cache
          standard-version -t dev --header ""
          git push --follow-tags origin develop

  build-amd64:
    needs: prepare
    runs-on: [self-hosted, X64]
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PUNQ_TOKEN }}

      - name: download and inject punq-frontend
        run: |
          curl https://github.com/mogenius/punq-frontend/releases/download/latest/latest.tar.gz -L -o ui.tar.gz
          mkdir -p ui/dist
          tar -xzf ui.tar.gz -C ui/dist

      - name: Build and push AMD64 image
        run: |
          GIT_BRANCH=$(git branch | grep \* | cut -d ' ' -f2 | tr '[:upper:]' '[:lower:]')
          COMMIT_HASH=$(git rev-parse --short HEAD)
          GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          BUILD_TIMESTAMP=$(date -Iseconds)
          VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))
          docker build -f ${{ env.DOCKERFILE }} --build-arg GOOS=linux --build-arg GOARCH=amd64 --build-arg VERSION="$VERSION" --build-arg BUILD_TIMESTAMP="$BUILD_TIMESTAMP" --build-arg GIT_BRANCH="$GIT_BRANCH" --build-arg COMMIT_HASH="$COMMIT_HASH" -t ${{ env.IMAGE_NAME }}:$VERSION-amd64 -t ${{ env.IMAGE_NAME }}:latest-amd64 .
          docker push ${{ env.IMAGE_NAME }}:$VERSION-amd64

  build-arm64-linux:
    needs: prepare
    runs-on: [self-hosted, ARM64]
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PUNQ_TOKEN }}
      
      - name: download and inject punq-frontend
        run: |
          curl https://github.com/mogenius/punq-frontend/releases/download/latest/latest.tar.gz -L -o ui.tar.gz
          mkdir -p ui/dist
          tar -xzf ui.tar.gz -C ui/dist

      - name: Build and push ARM64-linux image
        run: |
          GIT_BRANCH=$(git branch | grep \* | cut -d ' ' -f2 | tr '[:upper:]' '[:lower:]')
          COMMIT_HASH=$(git rev-parse --short HEAD)
          GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          BUILD_TIMESTAMP=$(date -Iseconds)
          VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))
          docker build --platform=linux/arm64 -f ${{ env.DOCKERFILE }} --build-arg GOOS=linux --build-arg GOARCH=arm64 --build-arg VERSION="$VERSION" --build-arg BUILD_TIMESTAMP="$BUILD_TIMESTAMP" --build-arg GIT_BRANCH="$GIT_BRANCH" --build-arg COMMIT_HASH="$COMMIT_HASH" -t ${{ env.IMAGE_NAME }}:$VERSION-arm64-linux -t ${{ env.IMAGE_NAME }}:latest-arm64-linux .
          docker push ${{ env.IMAGE_NAME }}:$VERSION-arm64-linux

  merge-images:
    needs: [build-amd64, build-arm64-linux, prepare]
    runs-on: self-hosted
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PUNQ_TOKEN }}

      - name: Merge images into a multi-arch manifest
        run: |
          VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))
          docker manifest create ${{ env.IMAGE_NAME }}:$VERSION \
              --amend ${{ env.IMAGE_NAME }}:$VERSION-amd64 \
              --amend ${{ env.IMAGE_NAME }}:$VERSION-arm64-linux
          docker manifest push ${{ env.IMAGE_NAME }}:$VERSION
          docker manifest create ${{ env.IMAGE_NAME }}:latest \
              --amend ${{ env.IMAGE_NAME }}:$VERSION-amd64 \
              --amend ${{ env.IMAGE_NAME }}:$VERSION-arm64-linux
          docker manifest push ${{ env.IMAGE_NAME }}:latest